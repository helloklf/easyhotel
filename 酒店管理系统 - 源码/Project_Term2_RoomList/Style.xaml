<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Storyboard x:Key="DefaultStartStoryboard">
        <DoubleAnimation From="0" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Duration="0:0:0.25">
        </DoubleAnimation>
        <DoubleAnimation From="0" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Duration="0:0:0.25">
        </DoubleAnimation>
    </Storyboard>

    <Style TargetType="Panel" x:Key="PageManagePanel">
        <Setter Property="Background" Value="{x:Null}"></Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform></ScaleTransform>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard Storyboard="{StaticResource DefaultStartStoryboard}"></BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="TabItem">
        <Setter Property="Visibility" Value="Collapsed"></Setter>
        <Setter Property="Background" Value="{x:Null}"></Setter>
        <Setter Property="BorderBrush" Value="{x:Null}"></Setter>
        <Setter Property="Padding" Value="10,5"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Margin" Value="0"></Setter>
        <Setter Property="Padding" Value="0"></Setter>
        <Setter Property="Background" Value="{x:Null}"></Setter>
    </Style>
    <Style TargetType="RadioButton" x:Key="LMenu">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="2" Opacity="0.5" Color="{Binding Foreground,ElementName=C}"></DropShadowEffect>
            </Setter.Value>
        </Setter>
        <Setter Property="MaxWidth" Value="240"></Setter>
        <Setter Property="MinWidth" Value="135"></Setter>
        <Setter Property="MinHeight" Value="135"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="Foreground" Value="{Binding Foreground,ElementName=C}"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="BorderThickness" Value="2"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
 Storyboard.TargetName="bd">
                                <EasingColorKeyFrame KeyTime="0" Value="#fff"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="Transparent"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator Background="Transparent">
                        <Border x:Name="bd" HorizontalAlignment="Stretch" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1">
                            <Border.OpacityMask>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black" Offset="0"/>
                                    <GradientStop Color="White" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <ContentPresenter Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" 
HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextBlock.Foreground="{TemplateBinding Foreground}" />
                        </Border>
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="false"></Condition>
                    <Condition Property="IsMouseOver" Value="true"></Condition>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#3000"></Setter>
                <Setter Property="Foreground" Value="{Binding Foreground,ElementName=C}"></Setter>
                <Setter Property="BorderBrush" Value="{Binding Background,ElementName=C}"></Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="false"></Condition>
                    <Condition Property="IsMouseOver" Value="false"></Condition>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#0000"></Setter>
                <Setter Property="Foreground" Value="{Binding Foreground,ElementName=C}"></Setter>
                <Setter Property="BorderBrush" Value="{x:Null}"></Setter>
            </MultiTrigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Foreground" Value="{Binding Background,ElementName=C}"></Setter>
                <Setter Property="Background" Value="{Binding Foreground,ElementName=C}"></Setter>
                <Setter Property="BorderBrush" Value="{Binding Foreground,ElementName=C}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="ComboBox">
        <Setter Property="TextBlock.Foreground" Value="{Binding Foreground,ElementName=C}"></Setter>
        <Setter Property="BorderBrush" Value="{x:Null}"></Setter>
        <Setter Property="MinWidth" Value="100"></Setter>
        <Setter Property="Background" Value="{Binding Background,ElementName=C}"></Setter>
    </Style>
    <Style TargetType="ComboBoxItem">
        <Setter Property="Background" Value="{Binding Background,ElementName=C}"></Setter>
        <Setter Property="Margin" Value="0"></Setter>
        <Setter Property="Padding" Value="5,2,5,2"></Setter>
        <Setter Property="BorderBrush" Value="{x:Null}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
    </Style>
    
    <Style TargetType="DatePicker">
        <Setter Property="Background" Value="{Binding Background,ElementName=C}"></Setter>
        <Setter Property="Foreground" Value="{Binding Foreground,ElementName=C}"></Setter>
        <Setter Property="BorderBrush" Value="{Binding Foreground,ElementName=C}"></Setter>
    </Style>

    <Style TargetType="Label">
        <Setter Property="MinWidth" Value="130"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{Binding Foreground,ElementName=C}"></Setter>
                <Setter Property="Foreground" Value="{Binding Background,ElementName=C}"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="false">
                <Setter Property="Background" Value="#0000"></Setter>
                <Setter Property="Foreground" Value="{Binding Foreground,ElementName=C}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Label" x:Key="L">
        <Setter Property="BorderBrush" Value="{x:Null}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Background" Value="{x:Null}"></Setter>
        <Setter Property="Height" Value="50"></Setter>
    </Style>
    
    <Style TargetType="CheckBox" x:Key="IsEnabel">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border Height="37" MinWidth="90">
                        <StackPanel Orientation="Horizontal">
                            <Image x:Name="IsC" Source="Pages/Image/未选中.png"></Image>
                            <TextBlock Text="回收站" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="15"></TextBlock>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="IsC" Property="Image.Source" Value="Pages/Image/选中.png"></Setter>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="IsC" Property="Image.Source" Value="Pages/Image/未选中.png"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"></Setter>
    </Style>
    <Style TargetType="TextBox">
        <Setter Property="Foreground" Value="White"></Setter>
    </Style>
    <Style TargetType="ListBox">
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Background" Value="{x:Null}"></Setter>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"></Setter>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
    </Style>
    <Style TargetType="TextBox" x:Key="ShortTextBox">
        <Setter Property="Margin" Value="2"></Setter>
        <Setter Property="Foreground" Value="{Binding Background,ElementName=C}"></Setter>
        <Setter Property="Background" Value="{Binding Foreground,ElementName=C}"></Setter>
        <Setter Property="BorderThickness" Value="0,0,0,1"></Setter>
        <Setter Property="MinWidth" Value="205"></Setter>
        <Setter Property="DockPanel.Dock" Value="Left"></Setter>
        <Setter Property="Padding" Value="5"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="MaxLength" Value="15"></Setter>
    </Style>
    <Style TargetType="TextBox" x:Key="LongTextBox">
        <Setter Property="Foreground" Value="{Binding Foreground,ElementName=C}"></Setter>
        <Setter Property="Margin" Value="2"></Setter>
        <Setter Property="BorderThickness" Value="0,0,0,1"></Setter>
        <Setter Property="MinWidth" Value="205"></Setter>
        <Setter Property="DockPanel.Dock" Value="Left"></Setter>
        <Setter Property="Background" Value="{Binding Background,ElementName=C}"></Setter>
        <Setter Property="Padding" Value="5"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="MaxLength" Value="100"></Setter>
        <Setter Property="TextWrapping" Value="Wrap"></Setter>
    </Style>

    <Style  TargetType ="Hyperlink" >
        <Setter  Property ="Foreground"  Value ="White" />
        <!-- 清除文字修饰(去掉下划线) -->
        <Setter  Property ="TextBlock.TextDecorations"  Value ="{x:Null}" />
        <Style.Triggers >
            <Trigger  Property ="IsMouseOver"  Value ="True" >
                <Setter  Property ="Foreground"  Value ="Blue"   />
                <!-- 在鼠标悬停时显示下划线 -->
                <Setter  Property ="TextBlock.TextDecorations" >
                    <Setter.Value >
                        <TextDecorationCollection >
                            <TextDecoration  Location ="Underline" />
                        </TextDecorationCollection >
                    </Setter.Value >
                </Setter >
            </Trigger >
        </Style.Triggers >
    </Style >
    
    <Style TargetType="ListBoxItem">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Foreground" Value="Red"></Setter>
            </Trigger>
            <Trigger Property="IsSelected" Value="false">
                <Setter Property="Foreground" Value="Green"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock" x:Key="LeftTitle">
        <Setter Property="Foreground" Value="{Binding Foreground,ElementName=C}"></Setter>
        <Setter Property="DockPanel.Dock" Value="Left"></Setter>
        <Setter Property="MinWidth" Value="85"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="TextAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="15"></Setter>
    </Style>



    <!--DataGrid样式-->
    <Style TargetType="DataGridColumnHeader" x:Key="GRIDC">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#1fff" Offset="0"/>
                    <GradientStop Color="#0fff" Offset="0.5"/>
                    <GradientStop Color="#1fff" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{Binding Foreground,ElementName=C}"></Setter>
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Padding" Value="25,10,25,10"></Setter>
        <Setter Property="Background" Value="{Binding Background,ElementName=C}"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="BorderBrush" Value="{Binding Foreground,ElementName=C}"></Setter>
        <Setter Property="BorderThickness" Value="0,0,0,1"></Setter>
    </Style>

    <!--系统菜单样式-->
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border" Background="Black">
                        <ItemsPresenter Width="160" Height="270"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--系统菜单项样式-->
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <ContentPresenter ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--系统菜单样式--><!--
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border" CornerRadius="2" Background="#8333"  BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#000" />
                        </Border.BorderBrush>
                        <ItemsPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"  Storyboard.TargetProperty="(FrameworkElement.Width)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.0020000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3450000" Value="150"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"  Storyboard.TargetProperty="(FrameworkElement.Height)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.0020000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3450000" Value="200"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    --><!--系统菜单项样式--><!--
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border MinWidth="120" CornerRadius="0" Padding="10">
                        <Border.Background>
                            <SolidColorBrush x:Name="MyAnimatedBrushBackground" Color="Transparent" />
                        </Border.Background>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text=" " Foreground="White"/>
                            <ContentPresenter ContentSource="Icon" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <TextBlock Text="   " Foreground="White"/>
                            <ContentPresenter ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MyAnimatedBrushBackground" Storyboard.TargetProperty="Color">
                                            <LinearColorKeyFrame Value="Transparent" KeyTime="00:00:00.0020000" />
                                            <LinearColorKeyFrame Value="#000" KeyTime="00:00:00.0320000" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MyAnimatedBrushBackground" Storyboard.TargetProperty="Color">
                                            <LinearColorKeyFrame Value="#000" KeyTime="00:00:00.0020000" />
                                            <LinearColorKeyFrame Value="Transparent" KeyTime="00:00:00.0320000" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

</ResourceDictionary>